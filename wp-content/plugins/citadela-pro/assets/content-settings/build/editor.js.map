{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../plugins/citadela-pro/assets/content-settings/editor.js"],"names":["registerPlugin","wp","plugins","PluginDocumentSettingPanel","editPost","__","i18n","data","withSelect","withDispatch","components","SelectControl","BaseControl","updateContentWidthClass","width","body","document","querySelector","classList","remove","add","clearAssociatedTemplateClasses","ContentSettingsPanel","props","contentWidth","label","value","onChange","select","getEditedPostAttribute","dispatch","metaKey","meta","undefined","render","getCurrentPost","getCurrentPostType","includes","ignore_special_page","template","icon"],"mappings":"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","file":"editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../plugins/citadela-pro/assets/content-settings/editor.js\");\n","const { registerPlugin } = wp.plugins;\r\nconst { PluginDocumentSettingPanel } = wp.editPost;\r\nconst { __ } = wp.i18n;\r\nconst { withSelect, withDispatch } = wp.data;\r\nconst { SelectControl, BaseControl } = wp.components;\r\n\r\nfunction updateContentWidthClass( width ){\r\n    const body = document.querySelector(\"body\");\r\n    \r\n    //remove all options to set new one\r\n    body.classList.remove(\"wide-content-width\");\r\n    body.classList.remove(\"full-content-width\");\r\n\r\n    if( width != 'default' && width != '' ){\r\n        body.classList.add( `${width}-content-width` );\r\n        body.classList.add( \"page-fullwidth\" );\r\n    }\r\n}\r\n\r\nfunction clearAssociatedTemplateClasses(){\r\n    const body = document.querySelector(\"body\");\r\n    body.classList.remove(\"wide-content-width\");\r\n    body.classList.remove(\"full-content-width\");\r\n    body.classList.remove(\"page-fullwidth\");\r\n}\r\n\r\nlet ContentSettingsPanel = ( props ) => {\r\n    const { \r\n        contentWidth,\r\n     } = props;\r\n\r\n     updateContentWidthClass( contentWidth );\r\n\r\n     return (\r\n        <>\r\n            <BaseControl>\r\n                <SelectControl\r\n                    label={ __( 'Content width', 'citadela-pro' ) }\r\n                    value={ contentWidth }\r\n                    options={ [\r\n                        { label: __( 'Default', 'citadela-pro' ), value: 'default' },\r\n                        { label: __( 'Wide', 'citadela-pro' ), value: 'wide' },\r\n                        { label: __( 'Fullwidth', 'citadela-pro' ), value: 'full' },\r\n                    ] }\r\n                    onChange={ ( value ) => { props.onChange( value, '_citadela_content_width' ) ; }\r\n                    }\r\n                />\r\n            </BaseControl>\r\n        </>\r\n    );\r\n};\r\n\r\nContentSettingsPanel = withSelect(\r\n    ( select ) => {\r\n        const { getEditedPostAttribute } = wp.data.select( 'core/editor' );\r\n        return {\r\n            contentWidth:  getEditedPostAttribute( 'meta' )['_citadela_content_width'],\r\n        }\r\n    }\r\n) (ContentSettingsPanel);\r\n\r\nContentSettingsPanel = withDispatch(\r\n    ( dispatch ) => {\r\n        return {\r\n            onChange: ( value, metaKey ) => {\r\n                let meta = {};\r\n\r\n                //sanitize values before save\r\n                meta[ metaKey ] = value === undefined ? \"\" : value;\r\n\r\n                dispatch( 'core/editor' ).editPost( {\r\n                    meta: meta\r\n                } );\r\n            }\r\n        }\r\n    }\r\n) (ContentSettingsPanel);\r\n\r\nregisterPlugin( 'citadela-content-settings-panel', {\r\n    render: () => {\r\n        const { getCurrentPost, getCurrentPostType, getEditedPostAttribute } = wp.data.select(\"core/editor\");\r\n        if ( ! [ 'page', 'special_page', 'citadela-item' ].includes( getCurrentPostType() ) ) {\r\n            return null;\r\n        }\r\n        \r\n        //additionally check if use options for Item page\r\n        const ignore_special_page = getEditedPostAttribute( 'meta' )['_citadela_ignore_special_page'] == '1'\r\n        if( getCurrentPostType() == 'citadela-item' && ! ignore_special_page ){\r\n            return null;\r\n        }\r\n\r\n        const { template } = getCurrentPost();\r\n        \r\n        const body = document.querySelector(\"body\");\r\n        \r\n        //fullwidth template is default template - in post data is stored as empty string\r\n        if( template != \"\" ) {\r\n            clearAssociatedTemplateClasses();\r\n            return null;\r\n        }\r\n\r\n        body.classList.add(\"page-fullwidth\");\r\n        \r\n        return (\r\n                <PluginDocumentSettingPanel\r\n                    name=\"citadela-content-settings-panel\"\r\n                    title={ __( 'Citadela Content Settings', 'citadela-pro' ) }\r\n                >\r\n                    <ContentSettingsPanel />\r\n                </PluginDocumentSettingPanel>\r\n        )\r\n    },\r\n    icon: ''\r\n} );"],"sourceRoot":""}